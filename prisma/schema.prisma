generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String   @db.ObjectId
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}
 
enum UserRole {
  USER
  ADMIN
}
 
model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId

  fullname    String
  email     String @unique
  password    String
  phoneNumber   String @unique


  role          UserRole  @default(USER)
  sessions      Session[]
  token         Int?

  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Category {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId

  name String @unique
  description String
  parentCategory String
  displayOrder Int
  isActive Boolean
  image String
  medications Medication[]
  
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

model Medication {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId

  name                String
  price               Int
  image               String
  description         String?
  stock               Int?
  requiresPrescription Boolean               @default(false)
  category            Category              @relation(fields: [categoryId], references: [id])
  categoryId          String @db.ObjectId

  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
}

model Order {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId

  name String
  price String
  Quantity String

  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
}